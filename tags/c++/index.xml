<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Marian&#39;s Blog</title>
    <link>https://marian42.de/tags/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Marian&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 13 May 2017 21:49:00 +0000</lastBuildDate>
    
	<atom:link href="https://marian42.de/tags/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LED Matrix Software</title>
      <link>https://marian42.de/article/ledmatrix-software/</link>
      <pubDate>Sat, 13 May 2017 21:49:00 +0000</pubDate>
      
      <guid>https://marian42.de/article/ledmatrix-software/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/ledmatrix-software/screenshot-2.png&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/ledmatrix-software/screenshot-2_hu883386bfa628fad3c089167fccdaa299_46020_636x0_resize_box_2.png&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;I wrote two programs that run on my LED matrix. They have different approaches and different aims. This post describes the one of them. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>No Man’s Starfield</title>
      <link>https://marian42.de/article/no-mans-starfield/</link>
      <pubDate>Sun, 18 Sep 2016 20:56:03 +0000</pubDate>
      
      <guid>https://marian42.de/article/no-mans-starfield/</guid>
      <description>&lt;video autoplay loop&gt;&lt;source src=&#34;https://marian42.de/article/no-mans-starfield/starfield.webm&#34; type=&#34;video/webm&#34; /&gt;&lt;/video&gt;

&lt;p&gt;This is a shader I made that renders a flight through a starfield. It’s meant to look like the galactic map that you can see in No Man’s Sky. Here is a link to the project on shadertoy:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.shadertoy.com/view/MtcGDf&#34;&gt;No Man’s Starfield&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Work in progress: Location based online game</title>
      <link>https://marian42.de/article/reslayer/</link>
      <pubDate>Sat, 12 Sep 2015 23:10:12 +0000</pubDate>
      
      <guid>https://marian42.de/article/reslayer/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/reslayer/Screenshot-21.png&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/reslayer/Screenshot-21_hub28618bf5cf515e5703eb33a2e5f259d_556731_636x0_resize_box_2.png&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;</description>
    </item>
    
    <item>
      <title>Game prototypes</title>
      <link>https://marian42.de/article/game-prototypes/</link>
      <pubDate>Sat, 18 Jul 2015 15:55:40 +0000</pubDate>
      
      <guid>https://marian42.de/article/game-prototypes/</guid>
      <description>&lt;p&gt;I’d like to share two game prototypes I made a few years ago. The first one is based on Tetris:&lt;/p&gt;

&lt;video autoplay loop src=&#34;https://marian42.de/article/game-prototypes/tetris1.webm&#34; type=&#34;video/webm&#34;&gt;&lt;/video&gt;

&lt;p&gt;It was written in C++ with bare-bones OpenGL. Once you press shift, the game enters a “fast mode”, where the down button takes a piece all the way down and if you don’t press it for three seconds, it will drop where it is. This is meant to be a fast-paced version of the original Tetris.&lt;/p&gt;

&lt;video autoplay loop src=&#34;https://marian42.de/article/game-prototypes/tetris2.webm&#34; type=&#34;video/webm&#34;&gt;&lt;/video&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Raspberry Pi Wetterstation</title>
      <link>https://marian42.de/article/pi-wetterstation/</link>
      <pubDate>Mon, 23 Sep 2013 17:27:39 +0000</pubDate>
      
      <guid>https://marian42.de/article/pi-wetterstation/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/pi-wetterstation/b1.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/pi-wetterstation/b1_huc90655baa7a8555e6492e2675ebbc4fa_915901_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;Um die Daten, die meine &lt;a href=&#34;http://marian42.de/?p=8&#34;&gt;Arduino-Wetterstation&lt;/a&gt; liefert, verfügbarer zu machen, habe ich mich entschieden, das Projekt jetzt mit einem Raspberry Pi weiterzuführen. Die Sensordaten werden wieder vom ILC-Board geliefert, das ich für den Schülerwettbewerb &lt;a href=&#34;http://www.intel-leibniz-challenge.de/&#34;&gt;Intel Leibniz Challenge&lt;/a&gt; bekommen habe.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Arduino-Wetterstation mit Bluetooth, Datalogging und Android-App</title>
      <link>https://marian42.de/article/wetterstation/</link>
      <pubDate>Tue, 09 Jul 2013 23:43:32 +0000</pubDate>
      
      <guid>https://marian42.de/article/wetterstation/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/wetterstation/DSC_0037-3.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/wetterstation/DSC_0037-3_huf6b55f4aa8d2badf513b77a8a1000025_560535_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;Die Wetterdaten für die Wetterstation werden von einem Board gesammelt, das ich für einen Schülerwettbewerb (&lt;a href=&#34;http://www.intel-leibniz-challenge.de/&#34;&gt;ILC&lt;/a&gt;) bekommen und zusammengesetzt habe. Auf dem Board rechnet ein &lt;a href=&#34;http://www.atmel.com/Images/Atmel-8386-8-and-16-bit-AVR-Microcontroller-ATxmega64A3U-128A3U-192A3U-256A3U_datasheet.pdf&#34; target=&#34;_blank&#34;&gt;ATxmega128A3U&lt;/a&gt;. Temperatur, Luftfeuchte, Luftdruck, Helligkeit, Regenmenge und Windgeschwindigkeit werden bestimmt. Die letzen beiden Werte werden durch &lt;a href=&#34;http://de.wikipedia.org/wiki/Regenmesser#Digitale_Niederschlagsmesser&#34; target=&#34;_blank&#34;&gt;mechanische Aufbauten&lt;/a&gt; ermittelt, an denen ein Magnet einen Hallsensor passiert.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>