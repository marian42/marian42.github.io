<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Articles on Marian&#39;s Blog</title>
    <link>https://marian42.de/article/</link>
    <description>Recent content in Articles on Marian&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 26 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://marian42.de/article/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Visualizing 150000 butterflies from the Natural History Museum</title>
      <link>https://marian42.de/article/butterflies/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marian42.de/article/butterflies/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/butterflies/tsne.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/butterflies/tsne_hud71a1620f6d55453b4d37c36a301e951_710601_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;The Natural History Museum in London has a &lt;a href=&#34;https://data.nhm.ac.uk/&#34;&gt;data portal&lt;/a&gt; in which they provide digital records for many of their specimens.
Many of these records contain images.
I recently learned how to use machine learning tools such as convolutional neural networks and I wanted to use the NHM data to see what can be done with these tools.
The dataset of butterflies seemed particularly interesting to me because the images are visually interesting, yet they are all similar in that they all contain a butterfly in a canonical pose.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lego Part Designer</title>
      <link>https://marian42.de/article/partdesigner/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marian42.de/article/partdesigner/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/partdesigner/partdesigner.png&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/partdesigner/partdesigner_hu848b95c1a7a5f7bdd0de614dd09bca54_112021_636x0_resize_box_2.png&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;I made a web app that lets you design your own Lego Technic parts and save them as printable STL files.
You can check it out &lt;a href=&#34;https://marian42.de/partdesigner/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Faster Than Life – Global Game Jam 2019 Project</title>
      <link>https://marian42.de/article/ggj19/</link>
      <pubDate>Sat, 02 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marian42.de/article/ggj19/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/ggj19/system1.png&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/ggj19/system1_hub37c77a8bdb645f534a89a4da743e7ec_1929407_636x0_resize_box_2.png&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;Like in the &lt;a href=&#34;https://marian42.de/article/ggj18&#34;&gt;previous year&lt;/a&gt;, I took part in the Global Game Jam.
I joined a team of six programmers, unfortunately there was a shortage of artists this year.
During the 48 hour jam, we made a space game that is inspired by Faster Than Light.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Infinite procedurally generated city with the Wave Function Collapse algorithm</title>
      <link>https://marian42.de/article/wfc/</link>
      <pubDate>Sun, 06 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://marian42.de/article/wfc/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/wfc/wfc.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/wfc/wfc_hu304a90a78938916a54cf05f5bef9c583_387521_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;This is a game where you walk through an infinite city that is procedurally generated as you walk.
It is generated from a set of blocks with the Wave Function Collapse algorithm.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ESA ExoMars Rover 3D model</title>
      <link>https://marian42.de/article/exomars/</link>
      <pubDate>Sun, 22 Jul 2018 19:32:12 +0000</pubDate>
      
      <guid>https://marian42.de/article/exomars/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/exomars/exomars.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/exomars/exomars_hu2a0e68d61e4b4f91b71fce8961bf5194_1571417_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;This is one of my first 3D modeling projects in Blender and my biggest 3D modeling project so far.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>3D printed model of my neighborhood</title>
      <link>https://marian42.de/article/neighborhood/</link>
      <pubDate>Tue, 17 Apr 2018 20:46:44 +0000</pubDate>
      
      <guid>https://marian42.de/article/neighborhood/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/neighborhood/DSCF3466.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/neighborhood/DSCF3466_hu0304cb7e538da5a35ca6f72df4bbc0a9_4451455_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;I 3D printed a model of the street where I live. This post will explain how I prepared the data for it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Agent V – Global Game Jam 2018 Project</title>
      <link>https://marian42.de/article/ggj18/</link>
      <pubDate>Sun, 04 Feb 2018 13:46:35 +0000</pubDate>
      
      <guid>https://marian42.de/article/ggj18/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/ggj18/Screenshot-16.png&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/ggj18/Screenshot-16_hu18f2958810b1c2bd374a4dfbe8ec8feb_3481081_636x0_resize_box_2.png&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;This year I participated in my first game jam, the Global Game Jam 2018. With a team of artists, programmers and a sound designer, we made a video game within 48 hours.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Generating 3D roof meshes from aerial LIDAR data</title>
      <link>https://marian42.de/article/roofmeshes/</link>
      <pubDate>Tue, 02 Jan 2018 22:14:14 +0000</pubDate>
      
      <guid>https://marian42.de/article/roofmeshes/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/roofmeshes/example.png&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/roofmeshes/example_hu56825e999e4caa40ee19eeab6ada3443_645515_636x0_resize_box_2.png&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;This is my graduation project I did in computer science. The goal was to come up with a method to generate 3D meshes of building roofs from point cloud data. The point cloud data was taken with aerial &lt;a href=&#34;https://en.wikipedia.org/wiki/Lidar&#34;&gt;LIDAR&lt;/a&gt; scanners and is &lt;a href=&#34;https://www.opengeodata.nrw.de/produkte/geobasis/dom/dom1l/&#34;&gt;available online&lt;/a&gt;. In addition, I used building layout polygons, which are also available as open data. I tested several strategies to generate a mesh and I’ll explain the best one in this post.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LED Matrix Software</title>
      <link>https://marian42.de/article/ledmatrix-software/</link>
      <pubDate>Sat, 13 May 2017 21:49:00 +0000</pubDate>
      
      <guid>https://marian42.de/article/ledmatrix-software/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/ledmatrix-software/screenshot-2.png&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/ledmatrix-software/screenshot-2_hu883386bfa628fad3c089167fccdaa299_46020_636x0_resize_box_2.png&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;I wrote two programs that run on my LED matrix. They have different approaches and different aims. This post describes one of them. &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>LED Matrix Materials Guide</title>
      <link>https://marian42.de/article/ledmatrix-tutorial/</link>
      <pubDate>Mon, 08 May 2017 00:17:55 +0000</pubDate>
      
      <guid>https://marian42.de/article/ledmatrix-tutorial/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/ledmatrix-tutorial/DSCF1196.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/ledmatrix-tutorial/DSCF1196_hu8db4ef05d929f8147950860218a32d9d_384627_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;I built an LED matrix out of 256 WS2812 LEDs. This post will describe which materials I used and which I tried with no success so you don’t have to.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>No Man’s Starfield</title>
      <link>https://marian42.de/article/no-mans-starfield/</link>
      <pubDate>Sun, 18 Sep 2016 20:56:03 +0000</pubDate>
      
      <guid>https://marian42.de/article/no-mans-starfield/</guid>
      <description>&lt;video autoplay loop muted&gt;&lt;source src=&#34;https://marian42.de/article/no-mans-starfield/starfield.webm&#34; type=&#34;video/webm&#34; /&gt;&lt;/video&gt;

&lt;p&gt;This is a shader I made that renders a flight through a starfield. It’s meant to look like the galactic map that you can see in No Man’s Sky. Here is a link to the project on shadertoy:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.shadertoy.com/view/MtcGDf&#34;&gt;No Man’s Starfield&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Computer Vision and Robotics Demo with Raspberry Pi</title>
      <link>https://marian42.de/article/computervision/</link>
      <pubDate>Sat, 02 Jul 2016 19:03:31 +0000</pubDate>
      
      <guid>https://marian42.de/article/computervision/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/computervision/setup-1.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/computervision/setup-1_hu1e0ec63932f61001b9e35ff69eb45bb7_102522_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;This spring, I spent some time at SAP’s commercial hackerspace. I wanted to explore how computer vision can be used with embedded devices and robotics. I built a demo that can detect QR codes and similar symbols and point a laser at them. Possible applications of this are putting QR codes on objects to help the robot locate them and grab or manipulate objects. Another possible use case is local navigation. A robot could infer its own location and orientation in space by detecting QR codes with known locations.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Work in progress: Location based online game</title>
      <link>https://marian42.de/article/reslayer/</link>
      <pubDate>Sat, 12 Sep 2015 23:10:12 +0000</pubDate>
      
      <guid>https://marian42.de/article/reslayer/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/reslayer/Screenshot-21.png&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/reslayer/Screenshot-21_hub28618bf5cf515e5703eb33a2e5f259d_556731_636x0_resize_box_2.png&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;This is a game prototype I’m currently working on. The game is played online, on a real world map and the location of the player is also the location ingame, just like in Ingress.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>16×16 LED Matrix</title>
      <link>https://marian42.de/article/ledmatrix/</link>
      <pubDate>Sat, 12 Sep 2015 14:44:48 +0000</pubDate>
      
      <guid>https://marian42.de/article/ledmatrix/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/ledmatrix/P1090010.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/ledmatrix/P1090010_hu881c752b3f20d2080a78a051cf94f2f1_228329_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;This is a 16×16 RGB LED matrix, made of 256 WS2812B LEDs. It’s powered by a Raspberry Pi and can display images and animations. With a game controller attached, it can play games.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Procedural pixelart generator</title>
      <link>https://marian42.de/article/proceduralart/</link>
      <pubDate>Sat, 18 Jul 2015 16:18:46 +0000</pubDate>
      
      <guid>https://marian42.de/article/proceduralart/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/proceduralart/canvas1.png&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/proceduralart/canvas1_hu4c2b71ac20cb5c401d09fca7da11831a_637979_636x0_resize_box_2.png&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;I made a procedural pixelart generator that is inspired by the art style of the upcoming space adventure game No Man’s Sky.&lt;/p&gt;

&lt;p&gt;Check it out and generate your own pixelart:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://marian42.github.io/proceduralart/&#34;&gt;https://marian42.github.io/proceduralart/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Game prototypes</title>
      <link>https://marian42.de/article/game-prototypes/</link>
      <pubDate>Sat, 18 Jul 2015 15:55:40 +0000</pubDate>
      
      <guid>https://marian42.de/article/game-prototypes/</guid>
      <description>&lt;p&gt;I’d like to share two game prototypes I made a few years ago. The first one is based on Tetris:&lt;/p&gt;

&lt;video autoplay loop muted src=&#34;https://marian42.de/article/game-prototypes/tetris1.webm&#34; type=&#34;video/webm&#34;&gt;&lt;/video&gt;

&lt;p&gt;It was written in C++ with bare-bones OpenGL. Once you press shift, the game enters a “fast mode”, where the down button takes a piece all the way down and if you don’t press it for three seconds, it will drop where it is. This is meant to be a fast-paced version of the original Tetris.&lt;/p&gt;

&lt;video autoplay loop muted src=&#34;https://marian42.de/article/game-prototypes/tetris2.webm&#34; type=&#34;video/webm&#34;&gt;&lt;/video&gt;</description>
    </item>
    
    <item>
      <title>Raspberry Pi powered fishtank</title>
      <link>https://marian42.de/article/iot-fishfeeder/</link>
      <pubDate>Fri, 03 Apr 2015 18:20:17 +0000</pubDate>
      
      <guid>https://marian42.de/article/iot-fishfeeder/</guid>
      <description>&lt;video autoplay loop muted src=&#34;https://marian42.de/article/iot-fishfeeder/feed.ogv&#34; type=&#34;video/ogg&#34; /&gt;&lt;/video&gt;

&lt;p&gt;My fishtank is now internet-connected. It is run by a Raspberry Pi that can do three things: Feed the fish, switch the lights and take pictures.&lt;/p&gt;

&lt;p&gt;To feed the fish, the Raspberry Pi sends commands to an automatic fishfeeder that I modified. It can empty any container in any order. This is achieved by an Arduino Pro Mini, two servos and a motor (&lt;a href=&#34;http://marian42.de/?p=508&#34;&gt;more&lt;/a&gt;). The plate prevents hot air from flowing into the feeder. In an early iteration of the project, this made the food sticky and kept it from falling into the tank. Switching the lights is done using a remote light switch and 433Mhz transmitter. Finally, there is a webcam that is connected directly to the Raspberry Pi to take pictures.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Connecting my fish tank to the Internet of Things – Part 1: Hacking an automatic fish feeder</title>
      <link>https://marian42.de/article/fishfeeder/</link>
      <pubDate>Mon, 30 Jun 2014 19:57:37 +0000</pubDate>
      
      <guid>https://marian42.de/article/fishfeeder/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/fishfeeder/DSC_0027_.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/fishfeeder/DSC_0027__hu219ad8ddefebca35033ce9be81e512ae_434884_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;I bought a used &lt;a href=&#34;https://www.google.com/search?q=rondomatic&amp;amp;safe=active&amp;amp;hl=de&amp;amp;tbm=isch&amp;amp;source=lnms&amp;amp;sa=X&amp;amp;ei=TLmxU-bcE4n-4QSyw4DIDA&amp;amp;ved=0CAgQ_AUoAw&amp;amp;biw=1920&amp;amp;bih=968&#34;&gt;automatic fish feeder&lt;/a&gt; from ebay. This device is completely mechanic and very old (older than 1989). It has 27 containers for fish food and a disc that does one rotation per day. By sticking pins into that disc one can trigger one or more feedings per day. A pin will rotate an outer ring with the containers by one unit. One container always faces down, emptying its contents. So if the outer ring has made one revolution, all containers have been emptied.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to build a Lego Portal Gun</title>
      <link>https://marian42.de/article/portalgun/</link>
      <pubDate>Wed, 30 Apr 2014 23:16:18 +0000</pubDate>
      
      <guid>https://marian42.de/article/portalgun/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/portalgun/DSC_0022.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/portalgun/DSC_0022_hu84f6777da9c0c385efb89a9e14d3adcc_1008766_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;Resources:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Parts: &lt;a href=&#34;https://marian42.de/article/portalgun/portalgun-parts.html&#34;&gt;list&lt;/a&gt;, &lt;a href=&#34;https://marian42.de/article/portalgun/portalgun-rebrickable.csv&#34;&gt;Rebrickable CSV&lt;/a&gt;, &lt;a href=&#34;https://marian42.de/article/portalgun/portalgun-bricklink.xml&#34;&gt;Bricklink XML&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Model: &lt;a href=&#34;https://marian42.de/article/portalgun/portalgun.ldr&#34; &gt;LDR&lt;/a&gt;, &lt;a href=&#34;https://marian42.de/article/portalgun/portalgun.3ds&#34; &gt;3DS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Build this &lt;a href=&#34;http://rebrickable.com/mocs/marian/portal-gun-aperture-science-portable-quantum-tunneling-devic&#34;&gt;MOC on Rebrickable&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Android-Benachrichtigungen auf dem Schreibtisch</title>
      <link>https://marian42.de/article/lol-notifications/</link>
      <pubDate>Sun, 16 Feb 2014 18:47:39 +0000</pubDate>
      
      <guid>https://marian42.de/article/lol-notifications/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/lol-notifications/head.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/lol-notifications/head_hu62b125b0943eacf79c09ac008a130c4d_702183_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;Das Ziel dieses Projekts ist, Benachrichtigungen von meinem Android-Handy automatisch auf einem &lt;a href=&#34;http://jimmieprodgers.com/kits/lolshield/&#34;&gt;LoL-Shield&lt;/a&gt; (Lots of LEDs) anzuzeigen. Dazu benutze ich einen Raspberry Pi, der sowieso schon auf meinem Schreibtisch steht, einen Arduino für das Schild und auf dem Handy &lt;a href=&#34;https://play.google.com/store/apps/details?id=net.dinglisch.android.taskerm&#34;&gt;Tasker&lt;/a&gt;, um auf Benachrichtigungen zu reagieren. Sobald eine Benachrichtigung erscheint, passiert folgendes:&lt;/p&gt;






&lt;img src=&#34;https://marian42.de/article/lol-notifications/idea.png&#34; width=&#34;625&#34; alt=&#34;&#34;&gt;</description>
    </item>
    
    <item>
      <title>Aquarium Innensicht mit Gopro</title>
      <link>https://marian42.de/article/gopro-timelapse/</link>
      <pubDate>Sat, 30 Nov 2013 18:02:19 +0000</pubDate>
      
      <guid>https://marian42.de/article/gopro-timelapse/</guid>
      <description>Wegen meinem Quadrocopter habe ich eine Gopro, die ja auch wasserfest ist. Da war es naheliegend, die mal im Aquarium auszuprobieren. Bei dem Aquarium stand einiges an Arbeit an, da das Glasbecken undicht war, und alles komplett ausgeräumt werden muss, um das Becken auszutauschen.</description>
    </item>
    
    <item>
      <title>Uni-Timer</title>
      <link>https://marian42.de/article/uni-timer/</link>
      <pubDate>Sat, 30 Nov 2013 17:50:57 +0000</pubDate>
      
      <guid>https://marian42.de/article/uni-timer/</guid>
      <description>Ich bin seit diesem Semester Student und in der Uni dauern Vorlesungen immer 90 Minuten, von “viertel nach” bis “viertel vor”. Da kam mir die Idee, dass man eine Uhr bräuchte, die nicht den Fortschritt der aktuellen Stunde, sondern den der aktuellen Vorlesung zeigt. Dazu habe ich schnell diese App zusammengecodet:
                  Die App zeigt die verbleibende Zeit oder den Fortschritt an und merkt sich den Namen der Veranstaltung und zeigt ihn nächste Woche zur selben Zeit wieder an.</description>
    </item>
    
    <item>
      <title>Quadrocopter</title>
      <link>https://marian42.de/article/copter/</link>
      <pubDate>Sat, 26 Oct 2013 23:57:34 +0000</pubDate>
      
      <guid>https://marian42.de/article/copter/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/copter/DSC_0008s.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/copter/DSC_0008s_hub76d3e56374177dca191e2563c23142b_1230965_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;Ich habe mir dieses Jahr den Traum erfüllt, einen selbst zusammengestellten Quadrocopter zu bauen.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Raspberry Pi Projekte</title>
      <link>https://marian42.de/article/pi-projects/</link>
      <pubDate>Sat, 19 Oct 2013 11:29:54 +0000</pubDate>
      
      <guid>https://marian42.de/article/pi-projects/</guid>
      <description>Was macht man eigentlich mit einem Raspberry Pi? Ich habe mir vor einem halben Jahr einen gekauft. Seitdem steht er hier auf meinem Schreibtisch und führt eine Reihe von Aufgaben aus. Hier eine Übersicht:
 http-Server für einige Webseiten auf dem Pi und die Daten auf meiner externen Festplatte Samba und FTP Server für die Daten auf der Festplatte   Wetterstation: Mit einigen Sensoren werden einmal pro Minute Wetterdaten aufgezeichnet    Webseite für die Wetterdaten Über einen RF-Sender steuert der Pi einige Funksteckdosen in meinem Zimmer an (mit RF-Sender, ELRO-Funksteckdosen und rcswitch-pi) Über einen IR-Sender steuert der Pi meine Stereoanlage (mit LIRC)                       Für die Stereoanlage und die Steckdosen gibt es eine API und ein Web-Interface zum Steuern.</description>
    </item>
    
    <item>
      <title>Quadrocopter Lichtsystem</title>
      <link>https://marian42.de/article/copter-lights/</link>
      <pubDate>Tue, 15 Oct 2013 22:47:26 +0000</pubDate>
      
      <guid>https://marian42.de/article/copter-lights/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/copter-lights/DSC_0036.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/copter-lights/DSC_0036_hucc72102bdf44ebb047d0872585a81dfc_587878_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;Dies ist ein Arduinoprojekt, das vier RGB-LED-Streifen an den vier Armen des Quadrocopters ansteuert. Das Ziel war, bei möglichst geringen Materialkosten möglichst viele Möglichkeiten bei der Beleuchtung des Quadrocopters zu haben.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Quadcopter Lightpainting</title>
      <link>https://marian42.de/article/copter-lightpainting/</link>
      <pubDate>Mon, 07 Oct 2013 22:39:59 +0000</pubDate>
      
      <guid>https://marian42.de/article/copter-lightpainting/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/copter-lightpainting/DSC_0015.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/copter-lightpainting/DSC_0015_hu5cd437a557e8beada30ef45cd2978670_718485_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;Die Fotos wurden mit einem &lt;a href=&#34;https://www.youtube.com/watch?v=WMknyBcoIIU&#34;&gt;beleuchteten&lt;/a&gt; Quadrocopter, einem Stativ und 15 Sekunden Belichtung aufgenommen.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Raspberry Pi Wetterstation</title>
      <link>https://marian42.de/article/pi-wetterstation/</link>
      <pubDate>Mon, 23 Sep 2013 17:27:39 +0000</pubDate>
      
      <guid>https://marian42.de/article/pi-wetterstation/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/pi-wetterstation/b1.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/pi-wetterstation/b1_huc90655baa7a8555e6492e2675ebbc4fa_915901_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;Um die Daten, die meine &lt;a href=&#34;http://marian42.de/?p=8&#34;&gt;Arduino-Wetterstation&lt;/a&gt; liefert, verfügbarer zu machen, habe ich mich entschieden, das Projekt jetzt mit einem Raspberry Pi weiterzuführen. Die Sensordaten werden wieder vom ILC-Board geliefert, das ich für den Schülerwettbewerb &lt;a href=&#34;http://www.intel-leibniz-challenge.de/&#34;&gt;Intel Leibniz Challenge&lt;/a&gt; bekommen habe.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>BTduino</title>
      <link>https://marian42.de/article/btduino/</link>
      <pubDate>Sat, 27 Jul 2013 15:00:42 +0000</pubDate>
      
      <guid>https://marian42.de/article/btduino/</guid>
      <description>&lt;p&gt;BTduino is an Android app that lets you add a custom bluetooth interface to your Arduino project without any programming on the Android side.&lt;/p&gt;

&lt;p&gt;Everything is better with bluetooth! Here are some examples:&lt;/p&gt;






&lt;a href=&#34;https://marian42.de/article/btduino/Screenshot_2013-07-24-21-15-49.png&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/btduino/Screenshot_2013-07-24-21-15-49_hudf552e1623e1ce736d7adab5dca76b30_165718_636x0_resize_box_2.png&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;h2 id=&#34;download&#34;&gt;Download&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://marian42.de/article/btduino/BTduino.apk&#34;&gt;Android APK file&lt;/a&gt; Android 4.0 or higher is required.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marian42.de/article/btduino/BTduino_example.txt&#34;&gt;Arduino example sketch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marian42.de/article/btduino/BTduino.txt&#34;&gt;Arduino sketch without examples&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://marian42.de/article/btduino/BTduino_source.zip&#34;&gt;Source code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>BTduino documentation</title>
      <link>https://marian42.de/article/btduino-doc/</link>
      <pubDate>Sat, 27 Jul 2013 13:49:48 +0000</pubDate>
      
      <guid>https://marian42.de/article/btduino-doc/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://marian42.de/?p=179&#34;&gt;BTduino app&lt;/a&gt; sends data using the serial interface of a microcontroller and a bluetooth connection. The concept of the protocol is to send all data in text form. Each set of data consists of the name and the value, seperated by a colon. This way of communication is not the most efficient one, but it is easy to use and human readable.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to add Bluetooth to your Arduino Project with BTduino</title>
      <link>https://marian42.de/article/btduino-tutorial/</link>
      <pubDate>Wed, 24 Jul 2013 20:51:21 +0000</pubDate>
      
      <guid>https://marian42.de/article/btduino-tutorial/</guid>
      <description>&lt;p&gt;This tutorial will show you how to connect your Arduino project to an Android device using the &lt;a href=&#34;http://marian42.de/?p=179&#34;&gt;BTduino app&lt;/a&gt;. You don’t need an extra Arduino library and you don’t need to code anything on the Android side.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Arduino-Wetterstation mit Bluetooth, Datalogging und Android-App</title>
      <link>https://marian42.de/article/wetterstation/</link>
      <pubDate>Tue, 09 Jul 2013 23:43:32 +0000</pubDate>
      
      <guid>https://marian42.de/article/wetterstation/</guid>
      <description>&lt;a href=&#34;https://marian42.de/article/wetterstation/DSC_0037-3.jpg&#34; target=&#34;_blank&#34; title=&#34;&#34;&gt;
	&lt;img src=&#34;https://marian42.de/article/wetterstation/DSC_0037-3_huf6b55f4aa8d2badf513b77a8a1000025_560535_636x0_resize_q75_box.jpg&#34; width=&#34;636&#34; alt=&#34;&#34;&gt;
&lt;/a&gt;



&lt;p&gt;Die Wetterdaten für die Wetterstation werden von einem Board gesammelt, das ich für einen Schülerwettbewerb (&lt;a href=&#34;http://www.intel-leibniz-challenge.de/&#34;&gt;ILC&lt;/a&gt;) bekommen und zusammengesetzt habe. Auf dem Board rechnet ein &lt;a href=&#34;http://www.atmel.com/Images/Atmel-8386-8-and-16-bit-AVR-Microcontroller-ATxmega64A3U-128A3U-192A3U-256A3U_datasheet.pdf&#34; target=&#34;_blank&#34;&gt;ATxmega128A3U&lt;/a&gt;. Temperatur, Luftfeuchte, Luftdruck, Helligkeit, Regenmenge und Windgeschwindigkeit werden bestimmt. Die letzen beiden Werte werden durch &lt;a href=&#34;http://de.wikipedia.org/wiki/Regenmesser#Digitale_Niederschlagsmesser&#34; target=&#34;_blank&#34;&gt;mechanische Aufbauten&lt;/a&gt; ermittelt, an denen ein Magnet einen Hallsensor passiert.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>